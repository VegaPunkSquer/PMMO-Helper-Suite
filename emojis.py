# emojis.py

from PyQt6.QtGui import QIcon, QImage
import os
import sys

# --- Fun√ß√£o "M√°gica" para encontrar arquivos no .exe ---
# Movida para c√° para que get_type_icon possa us√°-la
def resource_path(relative_path):
    """ Retorna o caminho absoluto para o recurso, funcionando tanto em dev quanto no PyInstaller """
    try:
        base_path = sys._MEIPASS
    except Exception:
        base_path = os.path.abspath(".")
    return os.path.join(base_path, relative_path)# emojis.py

from PyQt6.QtGui import QIcon, QImage
import os
import sys

# --- Fun√ß√£o "M√°gica" para encontrar arquivos no .exe ---
# Movida para c√° para que get_type_icon possa us√°-la
def resource_path(relative_path):
    """ Retorna o caminho absoluto para o recurso, funcionando tanto em dev quanto no PyInstaller """
    try:
        base_path = sys._MEIPASS
    except Exception:
        base_path = os.path.abspath(".")
    return os.path.join(base_path, relative_path)

# √çcones Gerais
LOGO = "Images/logo.png"
LOGO_PEQUENO = "Images/logo_pequeno.png"
CORACAO = "‚ù§Ô∏è"
ENERGIA = "‚ö°"
DEFESA = "üõ°Ô∏è"
EXPLOS√ÉO = "üí•"
ATK_ESPECIAL = "üîÆ"
VELCIDADE = "üèÉ"
REGENERAR_HP = "‚ù§Ô∏è‚Äçüî•"
REGENERAR_ENERGIA = "‚ö°‚Äçüî•"
APOIO = "üíñ"
CONFIG = "‚öôÔ∏è"
EVOLUIR = "‚è´"
LIXEIRA = "üóëÔ∏è"
MITICO = "üåü"
ADICIONAR = "‚ûï"
REMOVER = "‚ûñ"
ENVIAR = "üì§"
BUSCAR = "üîç"
EDITAR = "‚úèÔ∏è"
SALVAR = "üíæ"
AVISO = "‚ö†Ô∏è"
ERRO = "‚ùå"
SUCESSO = "‚úÖ"
AJUDA = "‚ùì"
IVS = "üî¢"
EVS = "üìà"
LOCALIZA√á√ÉO = "üìç"
MAPA = "üó∫Ô∏è"
SIMULADOR = "üéÆ"
INFO = "‚ÑπÔ∏è"
FLECHA_DIREITA = "‚û°Ô∏è"
FLECHA_ESQUERDA = "‚¨ÖÔ∏è"
FLECHA_CIMA = "‚¨ÜÔ∏è"
FLECHA_BAIXO = "‚¨áÔ∏è"
FLECHA_DUPLA_DIREITA = "‚è©"
FLECHA_DUPLA_ESQUERDA = "‚è™"
FLECHA_DUPLA_CIMA = "‚è´"
FLECHA_DUPLA_BAIXO = "‚è¨"
REL√ìGIO = "‚è∞"
CALEND√ÅRIO = "üìÖ"
CALIBRAR = "üìè"
ALVO = "üéØ"
L√çNGUA = "üó£Ô∏è"
L√ÇMPADA = "üí°"
VARRER = "üßπ"
CAMERA = "üì∑"
HOTKEY = "‚å®Ô∏è"
# Emojis de Status
CARREGANDO = "‚è≥"
ERRO_CARREGAMENTO = "‚ùó"
STATUS = "üìä"
# Emojis de A√ß√£o
INICIAR = "‚ñ∂Ô∏è"
PAUSAR = "‚è∏Ô∏è"
PARAR = "‚èπÔ∏è"
# Emojis de Navega√ß√£o
NAVEGAR = "üåê"
# Emojis de Comunica√ß√£o
CHAT = "üí¨"  
# Emojis de M√≠dia
IMAGEM = "üñºÔ∏è"
AUDIO = "üéµ"
VIDEO = "üé•"
# Emojis de Rea√ß√µes
GOSTEI = "üëç"
TRISTE = "üëé"
# Emojis de Emo√ß√µes
FELIZ = "üòä"
TRISTE = "üò¢"
# Emojis de Eventos
EVENTO = "üéâ"
# Emojis de Status de Rede
REDE_ONLINE = "üåê"
REDE_OFFLINE = "üö´"
# Emojis de Pok√©mon
TYPE_ICONS = {
    "Fire": "Images/fogo.png",
    "Ground": "Images/terra.png",
    "Water": "Images/agua.png",
    "Poison": "Images/veneno.png",
    "Psychic": "Images/psiquico.png",
    "Electric": "Images/eletrico.png",
    "Ghost": "Images/fantasma.png",
    "Ice": "Images/gelo.png",
    "Grass": "Images/planta.png",
    "Dragon": "Images/dragao.png",
    "Dark": "Images/sombrio.png",
    "Flying": "Images/voador.png",
    "Rock": "Images/pedra.png",
    "Fairy": "Images/fada.png",
    "Bug": "Images/inseto.png",
    "Fighting": "Images/lutador.png",
    "Steel": "Images/metalico.png",
    "Normal": "Images/normal.png"
}
# --- CAMINHOS PARA SPRITESHEETS ---
# Presume que voc√™ tem pastas /Images/hearts e /Images/energy
# com arquivos numerados de 0 a 11 (ex: heart_0.png, heart_1.png, etc.)
HP_BASE = "Images/hp/hp_"
ENERGY_BASE = "Images/energy/energy_"
ATTACK_BASE = "Images/attack/attack_"
DEFENSE_BASE = "Images/defense/defense_"
SPECIAL_ATTACK_BASE = "Images/special_attack/special_attack_"
SPECIAL_DEFENSE_BASE = "Images/special_defense/special_defense_"
SPEED_BASE = "Images/speed/speed_"
HPREGEN_BASE = "Images/hp_regen/hp_regen_"
ENERGYREGEN_BASE = "Images/energy_regen/energy_regen_"

# Emojis de Status de Batalha
SHINY = "‚ú®"
BOSS = "üëë"
POKEBOLA = "Images/pokebola.png"
ESCUDO = "üõ°Ô∏è"
ESPADA = "‚öîÔ∏è"
PATAS = "üêæ"
TROF√âU = "üèÜ"
TEMA = "üé®"
CER√âBRAL = "üß†"
VIT√ìRIA = "üèÖ"
COMEMORA√á√ÉO = "üéä"
DERROTA = "üíî"
MUKI = "üí™"
RESIST√äNCIA = "üõ°Ô∏è"
FRACO = "üí¢"
DOENTE = "ü§í"
MACHUCADO = "ü§ï"
# Outros
DINHEIRO = "üí∞"


def get_type_icon(type_name: str) -> QImage | None:
    """
    Recebe o nome de um tipo e retorna o QIcon correspondente.
    """
    # 1. Pega o caminho relativo do dicion√°rio
    relative_path = TYPE_ICONS.get(type_name)
    
    if relative_path:
        # 2. Usa a fun√ß√£o resource_path para obter o caminho absoluto e correto
        absolute_path = resource_path(relative_path)

        # --- LINHA DE DEPURA√á√ÉO ---
        # Esta linha vai te dizer o que est√° acontecendo no terminal.
        print(f"Procurando por '{type_name}': Caminho = '{absolute_path}' | Arquivo existe? {os.path.exists(absolute_path)}")
        
        # 3. Verifica se o arquivo realmente existe nesse caminho final
        if os.path.exists(absolute_path):
            return QIcon(absolute_path)
            
    return None

# √çcones Gerais
LOGO = "Images/logo.png"
LOGO_PEQUENO = "Images/logo_pequeno.png"
CORACAO = "‚ù§Ô∏è"
ENERGIA = "‚ö°"
DEFESA = "üõ°Ô∏è"
EXPLOS√ÉO = "üí•"
ATK_ESPECIAL = "üîÆ"
VELCIDADE = "üèÉ"
REGENERAR_HP = "‚ù§Ô∏è‚Äçüî•"
REGENERAR_ENERGIA = "‚ö°‚Äçüî•"
APOIO = "üíñ"
CONFIG = "‚öôÔ∏è"
EVOLUIR = "‚è´"
LIXEIRA = "üóëÔ∏è"
MITICO = "üåü"
ADICIONAR = "‚ûï"
REMOVER = "‚ûñ"
ENVIAR = "üì§"
BUSCAR = "üîç"
EDITAR = "‚úèÔ∏è"
SALVAR = "üíæ"
AVISO = "‚ö†Ô∏è"
ERRO = "‚ùå"
SUCESSO = "‚úÖ"
AJUDA = "‚ùì"
IVS = "üî¢"
EVS = "üìà"
LOCALIZA√á√ÉO = "üìç"
MAPA = "üó∫Ô∏è"
SIMULADOR = "üéÆ"
INFO = "‚ÑπÔ∏è"
FLECHA_DIREITA = "‚û°Ô∏è"
FLECHA_ESQUERDA = "‚¨ÖÔ∏è"
FLECHA_CIMA = "‚¨ÜÔ∏è"
FLECHA_BAIXO = "‚¨áÔ∏è"
FLECHA_DUPLA_DIREITA = "‚è©"
FLECHA_DUPLA_ESQUERDA = "‚è™"
FLECHA_DUPLA_CIMA = "‚è´"
FLECHA_DUPLA_BAIXO = "‚è¨"
REL√ìGIO = "‚è∞"
CALEND√ÅRIO = "üìÖ"
CALIBRAR = "üìè"
ALVO = "üéØ"
L√çNGUA = "üó£Ô∏è"
L√ÇMPADA = "üí°"
VARRER = "üßπ"
CAMERA = "üì∑"
HOTKEY = "‚å®Ô∏è"
# Emojis de Status
CARREGANDO = "‚è≥"
ERRO_CARREGAMENTO = "‚ùó"
STATUS = "üìä"
# Emojis de A√ß√£o
INICIAR = "‚ñ∂Ô∏è"
PAUSAR = "‚è∏Ô∏è"
PARAR = "‚èπÔ∏è"
# Emojis de Navega√ß√£o
NAVEGAR = "üåê"
# Emojis de Comunica√ß√£o
CHAT = "üí¨"  
# Emojis de M√≠dia
IMAGEM = "üñºÔ∏è"
AUDIO = "üéµ"
VIDEO = "üé•"
# Emojis de Rea√ß√µes
GOSTEI = "üëç"
TRISTE = "üëé"
# Emojis de Emo√ß√µes
FELIZ = "üòä"
TRISTE = "üò¢"
# Emojis de Eventos
EVENTO = "üéâ"
# Emojis de Status de Rede
REDE_ONLINE = "üåê"
REDE_OFFLINE = "üö´"
# Emojis de Pok√©mon
TYPE_ICONS = {
    "Fire": "Images/fogo.png",
    "Ground": "Images/terra.png",
    "Water": "Images/agua.png",
    "Poison": "Images/veneno.png",
    "Psychic": "Images/psiquico.png",
    "Electric": "Images/eletrico.png",
    "Ghost": "Images/fantasma.png",
    "Ice": "Images/gelo.png",
    "Grass": "Images/planta.png",
    "Dragon": "Images/dragao.png",
    "Dark": "Images/sombrio.png",
    "Flying": "Images/voador.png",
    "Rock": "Images/pedra.png",
    "Fairy": "Images/fada.png",
    "Bug": "Images/inseto.png",
    "Fighting": "Images/lutador.png",
    "Steel": "Images/metalico.png",
    "Normal": "Images/normal.png"
}
# --- CAMINHOS PARA SPRITESHEETS ---
# Presume que voc√™ tem pastas /Images/hearts e /Images/energy
# com arquivos numerados de 0 a 11 (ex: heart_0.png, heart_1.png, etc.)
HEARTS_BASE = "Images/hearts/hearts_"
ENERGY_BASE = "Images/energy/energy_"
ATTACK_BASE = "Images/attack/attack_"
DEFENSE_BASE = "Images/defense/defense_"
SPECIAL_ATTACK_BASE = "Images/special_attack/special_attack_"
SPECIAL_DEFENSE_BASE = "Images/special_defense/special_defense_"
SPEED_BASE = "Images/speed/speed_"
HPREGEN_BASE = "Images/hp_regen/hp_regen_"
ENERGYREGEN_BASE = "Images/energy_regen/energy_regen_"
# Emojis de Status de Batalha
SHINY = "‚ú®"
BOSS = "üëë"
POKEBOLA = "Images/pokebola.png"
ESCUDO = "üõ°Ô∏è"
ESPADA = "‚öîÔ∏è"
PATAS = "üêæ"
TROF√âU = "üèÜ"
TEMA = "üé®"
CER√âBRAL = "üß†"
VIT√ìRIA = "üèÖ"
COMEMORA√á√ÉO = "üéä"
DERROTA = "üíî"
MUKI = "üí™"
RESIST√äNCIA = "üõ°Ô∏è"
FRACO = "üí¢"
DOENTE = "ü§í"
MACHUCADO = "ü§ï"
# Outros
DINHEIRO = "üí∞"


def get_type_icon(type_name: str) -> QImage | None:
    """
    Recebe o nome de um tipo e retorna o QIcon correspondente.
    """
    # 1. Pega o caminho relativo do dicion√°rio
    relative_path = TYPE_ICONS.get(type_name)
    
    if relative_path:
        # 2. Usa a fun√ß√£o resource_path para obter o caminho absoluto e correto
        absolute_path = resource_path(relative_path)

        # --- LINHA DE DEPURA√á√ÉO ---
        # Esta linha vai te dizer o que est√° acontecendo no terminal.
        print(f"Procurando por '{type_name}': Caminho = '{absolute_path}' | Arquivo existe? {os.path.exists(absolute_path)}")
        
        # 3. Verifica se o arquivo realmente existe nesse caminho final
        if os.path.exists(absolute_path):
            return QIcon(absolute_path)
            
    return None